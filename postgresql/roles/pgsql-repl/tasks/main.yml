---
# tasks file for roles/pgsql

- name: install packages
  dnf:
    name: 
      - '@postgresql:9.6'
      - unzip
      - python3-pip
    state: present

- name: install pip packages
  pip:
    name: psycopg2-binary
    state: present

- name: Disable SELinux
  selinux:
    state: disabled

- name: check if pgsql db is initialized.
  stat:
    path: /var/lib/pgsql/data/PG_VERSION
  register: pgdata_dir_version

- name: initialized pgsql db
  shell: postgresql-setup --initdb
  when: not pgdata_dir_version.stat.exists

- name: start postgresql service
  systemd:
    name: postgresql
    state: started
    enabled: yes

# replication

- name: create user replication
  become_user: postgres
  postgresql_user:
    db: postgres
    name: replication
    password: Password1!
    role_attr_flags: REPLICATION,LOGIN

- name: create user for backup
  become_user: postgres
  postgresql_user:
    db: postgres
    name: barman
    password: Password1!
    role_attr_flags: SUPERUSER

- name: create directory .ssh
  file:
    path: /var/lib/pgsql/.ssh
    state: directory
    group: postgres
    owner: postgres
    mode: 0700

- name: set authorized keys
  openssh_keypair:
    path: /var/lib/pgsql/.ssh/id_rsa
    group: postgres
    owner: postgres

- name: copy pgpass
  copy:
    src: pgpass
    dest: /var/lib/pgsql/.pgpass
    owner: postgres
    group: postgres
    mode: 0600

- name: copy conf on master
  copy:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: postgres
    group: postgres
  when: 
    - conf is defined
    - type is defined and type == "master"
  with_items: '{{ conf }}'

- name: restart postgresql service
  systemd:
    name: postgresql
    state: restarted
    enabled: yes

- name: stop pgsql service on slave
  systemd:
    name: postgresql
    state: stopped
  when: type is defined and type == "slave"

- name: remove pgdata directory on slave
  file:
    path: /var/lib/pgsql/data
    state: absent
  when: type is defined and type == "slave"

- name: copy db from master to slave
  become_user: postgres
  shell: pg_basebackup -h 192.168.1.100 -D /var/lib/pgsql/data/ -R -P -U replication --xlog-method=stream
  when: type is defined and type == "slave"

- name: start pgsql service on slave
  systemd:
    name: postgresql
    state: started
  when: type is defined and type == "slave"
